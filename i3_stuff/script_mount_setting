#!/bin/bash

# simple script to

function mount_func {
    MOUNTABLE_LIST=$(ls /dev/disk/by-label -Al | awk '{print $9 $11}' | sed '1d' | sort)
    DEVICE_LIST=()
    for device in $MOUNTABLE_LIST; do
        DNODE=$(echo $device | awk 'BEGIN {FS="../../"}; {print $2}')
        DNAME=$(echo $device | awk 'BEGIN {FS="../../"}; {print $1}')
        CHECK=$(mount | grep -w $DNODE)
        if [ "$CHECK" == "" ]; then
            DEVICE_LIST+=([$DNODE]$DNAME)
        fi
    done

    if [ "${#DEVICE_LIST[@]}" -eq 0 ]; then
        echo "There is no mountable partition" | rofi -dmenu -theme flat-i3 -font 'Space Mono 12' -sb "#27418C" -l 10
    else
        INPUT=$(printf '%s\n' ${DEVICE_LIST[@]} | sort | rofi -dmenu -theme flat-i3 -font 'Space Mono 12' -p "Select disk to mount:" -sb "#27418C" -l 10)

        if [ -z "$INPUT" ]; then
            exit
        fi
        DNAME=$(echo $INPUT | sed -e 's/^.*\]//g')
        DNODE=$(echo $INPUT | sed -e 's/^\[\(.*.\)\].*/\1/g')

        MOUNT_DIR="/home/sukbeom/mountpoint/$DNAME"
        mkdir -p $MOUNT_DIR

        SUDO_ASKPASS=/home/sukbeom/.local/bin/sudo_pass sudo -A mount /dev/$DNODE /home/sukbeom/mountpoint/$DNAME -o umask=000 && notify-send "$DNAME is mounted at $MOUNT_DIR"
        urxvt -e ranger ${MOUNT_DIR}
    fi
}

function umount_func {
    MOUNTABLE_LIST=$(ls /dev/disk/by-label -Al | awk '{print $9 $11}' | sed '1d' | sort)
    DEVICE_LIST=()
    for device in $MOUNTABLE_LIST; do
        DNODE=$(echo $device | awk 'BEGIN {FS="../../"}; {print $2}')
        DNAME=$(echo $device | awk 'BEGIN {FS="../../"}; {print $1}')

	echo $DNODE
	echo $DNAME
        CHECK=$(mount | grep -w $DNODE)
        if [ "$CHECK" != "" ]; then
            DEVICE_LIST+=($DNAME)
        fi
    done

    if [ "${#DEVICE_LIST[@]}" -eq 0 ]; then
        echo "There is no mounted partitions at all" | rofi -theme flat-i3 -dmenu -fn 'Space Mono-8' -sb "#27418C" -l 10
    else
        INPUT=$(printf '%s\n' ${DEVICE_LIST[@]} | sort | dmenu -fn 'Space Mono-8' -p "Select disk to unmount:" -sb "#27418C" -l 10)

        if [ -z "$INPUT" ]; then
            exit
        fi

        MOUNT_DIR="/home/sukbeom/mountpoint/$INPUT"

        SUDO_ASKPASS=/home/sukbeom/.local/bin/sudo_pass sudo -A umount $MOUNT_DIR && notify-send "$MOUNT_DIR is umounted"
        rmdir $MOUNT_DIR
    fi
    exit
}

OPER_TYPE=$(echo -ne "mount a partition\nunmount a partition" | rofi -theme flat-i3 -dmenu -font 'Space Mono 12' -p "Mount or umount?" -sb "#27418C")
if [ "$OPER_TYPE" == "mount a partition" ]; then
    mount_func;
elif [ "$OPER_TYPE" == "unmount a partition" ]; then
    umount_func;
fi
